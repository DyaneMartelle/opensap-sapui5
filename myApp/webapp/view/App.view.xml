<mvc:View displayBlock="true" xmlns:l="sap.ui.layout" xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns:f="sap.ui.layout.form"
	xmlns="sap.m" controllerName="opensap.myapp.controller.App">
	<!-- sap.m.App -->
	<App>
		<pages>
			<Page title="openSAP - Developing with SAPUI5">
				<content>
					<IconTabBar id="idTopLevelIconTabBar" class="sapUiResponsiveContentPadding" selectedKey="db">
						<items>
							<IconTabFilter id="start" text="{i18n>gettingStartedFilter}">
								<Carousel>
									<pages>
										<Image src="https://upload.wikimedia.org/wikipedia/commons/9/9f/GEO_Globe.jpg" height="600px"/>
										<Image
											src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Wikipedia_Hello_World_Graphic.svg/2000px-Wikipedia_Hello_World_Graphic.svg.png"
											height="600px"/>
									</pages>
								</Carousel>
								<Button text="{i18n>showHelloButtonText}" press="onShowHello"/>
								<Input
									value="{ path: 'helloPanel>/recipient/amount', type: 'sap.ui.model.type.Float', formatOptions: {minFractionDigits: 2}, constraints: {maximum : 3000} }"
									description="Hello {helloPanel>/recipient/name}" valueLiveUpdate="true" width="60%"/>
							</IconTabFilter>
							<IconTabFilter id="layouts" text="{i18n>layoutFilter}">
								<MessageStrip type="Information" showIcon="true" text="Here's a Form Layout inside an Icon Tab Bar …"/>
								<f:SimpleForm id="simpleFormChange" title="Address" editable="true" class="editableForm sapUiSmallMarginTopBottom">
									<f:content>
										<Label text="{i18n>layoutFormName}"/>
										<Input value="{address>/Name}"/>
										<Label text="{i18n>layoutFormStreet}"/>
										<Input value="{address>/Street}"/>
										<Label text="{i18n>layoutFormHouseNumber}"/>
										<Input value="{address>/HouseNumber}"/>
										<Label text="{i18n>layoutFormZIPCode}"/>
										<Input value="{address>/ZIPCode}"/>
										<Label text="{i18n>layoutFormCity}"/>
										<Input value="{address>/City}"/>
										<Label text="{i18n>layoutFormCountry}"/>
										<Select>
											<items>
												<core:Item text="{i18n>layoutCountryGermany}"/>
												<core:Item text="{i18n>layoutCountryUSA}"/>
												<core:Item text="{i18n>layoutCountryEngland}"/>
											</items>
										</Select>
									</f:content>
								</f:SimpleForm>
								<Toolbar>
									<ToolbarSpacer/>
									<Button text="{i18n>layoutPublishButton}" type="Accept" icon="sap-icon://outbox"/>
									<Button text="{i18n>layoutDraftButton}" icon="sap-icon://save"/>
								</Toolbar>
								<!-- W2 Bonus Exercise - Map Location Formatter -->
								<Panel id="Location" headerText="{i18n>formLocation}">
									<Image
										src="{ parts: [ {path: 'address>/HouseNumber'}, {path: 'address>/Street'}, {path: 'address>/City'} ], formatter : '.formatMapUrl.apply'}"
										width="600px" height="400px"/>
								</Panel>
							</IconTabFilter>
							<!-- We add a new IconTabFilter with the key db and the translated text dataBindingFilter 
						     to the view of our app. additionally, we set the selectedkey property on the 
						     IconTabBar control to db so that this tab is opened by default when we start the app. -->
							<IconTabFilter text="{i18n>dataBindingFilter}" key="db">
								<content>
									<!-- add the sap.m.SearchField to the list header and 
									     add sorting and grouping to the list’s binding information ]
									     growing = display 5 items and add 5 more when a user clicks on the “More” button at the end of the list -->
									<List id="productsList"
										items="{ path : '/ProductSet', sorter : { path : 'Category', group : true }, parameters : { expand : 'ToSupplier' } }" growing="true"
										growingThreshold="5" growingScrollToLoad="false" headerText="{i18n>productListTitle}">
										<headerToolbar>
											<Toolbar>
												<Title text="{i18n>productListTitle}"/>
												<ToolbarSpacer/>
												<SearchField width="50%" search="onFilterProducts"/>
											</Toolbar>
										</headerToolbar>
										<items>
											<ObjectListItem title="{Name}"
												number="{ parts: [ {path: 'Price' }, {path: 'CurrencyCode' } ], type: 'sap.ui.model.type.Currency' , formatOptions: { currencyCode: false } }"
												numberState="{= ${Price} > 500 ? 'Error' : 'Success'}" intro="{ProductID}" press="onItemSelected" type="Active">
												<!-- In this step, we add a custom formatter to our list item that can perform more 
												     complex conversion and formatting of data. -->
												<firstStatus>
													<ObjectStatus text="{ parts: [ {path: 'WeightUnit'}, {path: 'WeightMeasure'} ], formatter : '.formatter.delivery' }"/>
												</firstStatus>
												<secondStatus>
													<ObjectStatus title="{i18n>statusDeliveryFrom}" text="{ToSupplier/Address/City}"/>
												</secondStatus>
											</ObjectListItem>
										</items>
									</List>
									<!-- area for the product details below our list initially not displayed -->
									<Panel id="productDetailsPanel" headerText="{i18n>panelHeader}" visible="false">
										<l:Grid>
											<Text text="{i18n>ProductID}: {ProductID}"/>
											<Text text="{i18n>ProductName}: {Name}"/>
											<Text text="{i18n>Description}:\n {Description}"/>
											<Text text="{i18n>Price}: {Price}"/>
										</l:Grid>
									</Panel>
								</content>
							</IconTabFilter>
						</items>
					</IconTabBar>
				</content>
			</Page>
		</pages>
	</App>
</mvc:View>